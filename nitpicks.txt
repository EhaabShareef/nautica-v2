database/seeders/DemoDataSeeder.php (1)
83-99: Fix potential unique constraint violation and soft-delete gotcha for vessels.

updateOrCreate is matching on owner_client_id + name, but registration_number is the unique column. If a vessel with the same registration_number exists (possibly soft-deleted), this can fail on insert or leave the record “deleted.” Match on registration_number and restore if soft-deleted.

Apply this diff:

-        $vessel = Vessel::updateOrCreate(
-            ['owner_client_id' => $client->id, 'name' => 'Sea Breeze'],
-            [
-                'registration_number' => 'SB-2024-001',
-                'type' => 'yacht',
-                'length' => 28.00,
-                'width' => 10.00,
-                'draft' => 6.00,
-                'specifications' => [
-                    'engine' => 'Twin Diesel',
-                    'fuel_capacity' => '500L',
-                    'year' => 2020
-                ],
-                'is_active' => true
-            ]
-        );
+        $vessel = Vessel::withTrashed()->updateOrCreate(
+            ['registration_number' => 'SB-2024-001'],
+            [
+                'owner_client_id' => $client->id,
+                'name' => 'Sea Breeze',
+                'type' => 'yacht',
+                'length' => 28.00,
+                'width' => 10.00,
+                'draft' => 6.00,
+                'specifications' => [
+                    'engine' => 'Twin Diesel',
+                    'fuel_capacity' => '500L',
+                    'year' => 2020
+                ],
+                'is_active' => true
+            ]
+        );
+        if ($vessel->trashed()) {
+            $vessel->restore();
+        }
This makes the seeder idempotent and compatible with SoftDeletes.

================

database/migrations/2025_08_23_150000_add_blacklisted_to_users.php (2)
12-14: Minor: chain the index on the column declaration.

Slightly cleaner and avoids a separate statement.

Apply this diff:

-            $table->boolean('is_blacklisted')->default(false)->after('is_active');
-            $table->index('is_blacklisted');
+            $table->boolean('is_blacklisted')->default(false)->after('is_active')->index();
19-21: Down migration: prefer explicit index name for portability.

Dropping by name avoids edge cases with some drivers or custom index names.

Apply this diff:

-            $table->dropIndex(['is_blacklisted']);
+            $table->dropIndex('users_is_blacklisted_index');

====================

app/Providers/AuthServiceProvider.php (1)
15-19: Optional: rely on policy auto-discovery (Laravel).

If you’re on a Laravel version with policy auto-discovery enabled, this explicit mapping is optional. Keeping it is also fine if you prefer explicitness.

=================

app/Services/BookingEligibility.php (1)
7-8: Consistency: consider naming or final class.

Elsewhere you have VesselService; this one is just BookingEligibility. Either rename to BookingEligibilityService or mark the class final to signal no inheritance intended.

Apply this diff if you prefer the “final” option:

-class BookingEligibility
+final class BookingEligibility

